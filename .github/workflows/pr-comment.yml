name: PR Comment

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]

permissions:
  contents: read
  pull-requests: write
  actions: read
  checks: write

jobs:
  pr:
    name: Find PR number
    runs-on: ubuntu-latest
    outputs:
      number: ${{ steps.pr.outputs.number }}
      check_id: ${{ steps.check.outputs.result }}
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'pull_request' }}
    steps:
      - name: Find PR number
        id: pr
        env:
          GH_TOKEN: ${{ github.token }}
          PR_TARGET_REPO: ${{ github.repository }}
          PR_BRANCH: |-
            ${{
              (github.event.workflow_run.head_repository.owner.login != github.event.workflow_run.repository.owner.login)
                && format('{0}:{1}', github.event.workflow_run.head_repository.owner.login, github.event.workflow_run.head_branch)
                || github.event.workflow_run.head_branch
            }}
        run: |
          gh pr view --repo "${PR_TARGET_REPO}" "${PR_BRANCH}" \
            --json 'number' \
            --jq '"number=\(.number)"' \
            >> $GITHUB_OUTPUT

      - run: |
          echo "PR number: ${{ steps.pr.outputs.number }}"

      - name: Create PR check
        uses: actions/github-script@v7
        id: check
        with:
          script: |
            const response = await github.rest.checks.create({
              name: 'Screenshots Preview',
              head_sha: '${{ github.event.workflow_run.head_sha }}',
              status: 'in_progress',
              output: {
                title: 'Screenshots preparation',
                summary: 'Preparing screenshots from CI run...',
              },
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            return response.data.id

  pr-comment:
    runs-on: ubuntu-latest
    needs: pr
    if: ${{ needs.pr.outputs.number }}

    steps:
    - name: Download artifacts
      uses: actions/github-script@v7
      with:
        script: |
          const runId = context.payload.workflow_run.id;
          
          const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
            owner: context.repo.owner,
            repo: context.repo.repo,
            run_id: runId
          });
          
          const screenshot = artifacts.data.artifacts.find(a => a.name === 'screenshots');
          if (!screenshot) {
            console.log('No screenshots artifact found');
            return;
          }
          
          const download = await github.rest.actions.downloadArtifact({
            owner: context.repo.owner,
            repo: context.repo.repo,
            artifact_id: screenshot.id,
            archive_format: 'zip'
          });
          
          const fs = require('fs');
          fs.writeFileSync('screenshots.zip', Buffer.from(download.data));

    - name: Extract screenshots
      run: |
        unzip screenshots.zip
        ls -la

    - name: Checkout ci-artifacts repo
      uses: actions/checkout@v4
      with:
        repository: incognitojam/ci-artifacts
        token: ${{ secrets.ARTIFACTS_REPO_PAT }}
        path: ci-artifacts

    - name: Push screenshots
      working-directory: ci-artifacts
      run: |
        git checkout -b cube23/pr-${{ needs.pr.outputs.number }} || git checkout cube23/pr-${{ needs.pr.outputs.number }}
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        cp ../screenshot_vk.png . || echo "Standalone Vulkan screenshot not found"
        cp ../screenshot_opengl.png . || echo "Vox OpenGL screenshot not found"
        cp ../screenshot_vulkan.png . || echo "Vox Vulkan screenshot not found"
        git add .
        git commit -m "screenshots for PR #${{ needs.pr.outputs.number }}" || echo "No changes"
        git push origin cube23/pr-${{ needs.pr.outputs.number }} --force

    - name: Comment on PR
      uses: thollander/actions-comment-pull-request@24bffb9b452ba05a4f3f77933840a6a841d1b32b
      with:
        message: |
          <!-- _(screenshots run_id **${{ github.run_id }}**)_ -->
          ## ðŸ“¸ Screenshots

          ### Standalone Vulkan Demo (vkdemo)
          | Vulkan Demo |
          |:---:|
          | ![Vulkan Demo](https://raw.githubusercontent.com/incognitojam/ci-artifacts/cube23/pr-${{ needs.pr.outputs.number }}/screenshot_vk.png) |

          ### Vox Engine Renderers (cube23)
          | OpenGL Backend | Vulkan Backend |
          |:---:|:---:|
          | ![Vox OpenGL](https://raw.githubusercontent.com/incognitojam/ci-artifacts/cube23/pr-${{ needs.pr.outputs.number }}/screenshot_opengl.png) | ![Vox Vulkan](https://raw.githubusercontent.com/incognitojam/ci-artifacts/cube23/pr-${{ needs.pr.outputs.number }}/screenshot_vulkan.png) |
        comment-tag: screenshots
        pr-number: ${{ needs.pr.outputs.number }}
        github-token: ${{ secrets.GITHUB_TOKEN }}

  update_pr_check:
    name: Update PR check
    needs: [pr, pr-comment]
    if: always() && github.event.workflow_run.event == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - name: Update PR check
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.checks.update({
            check_run_id: ${{ needs.pr.outputs.check_id }},
            name: 'Screenshots Preview',
            head_sha: '${{ github.event.workflow_run.head_sha }}',
            status: 'completed',
            conclusion: '${{ needs.pr-comment.result }}',
            output: {
              title: 'Screenshots preparation',
              summary: 'Result: ${{ needs.pr-comment.result }}',
            },
            owner: context.repo.owner,
            repo: context.repo.repo,
          })
