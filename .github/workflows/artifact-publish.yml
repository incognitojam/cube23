name: Publish Screenshots

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]

permissions:
  contents: read
  pull-requests: write
  actions: read

jobs:
  pr:
    name: Find PR number
    runs-on: ubuntu-latest
    outputs:
      number: ${{ steps.pr.outputs.number }}
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'pull_request' }}
    steps:
      - name: Find PR number
        id: pr
        env:
          GH_TOKEN: ${{ github.token }}
          PR_TARGET_REPO: ${{ github.repository }}
          PR_BRANCH: |-
            ${{
              (github.event.workflow_run.head_repository.owner.login != github.event.workflow_run.repository.owner.login)
                && format('{0}:{1}', github.event.workflow_run.head_repository.owner.login, github.event.workflow_run.head_branch)
                || github.event.workflow_run.head_branch
            }}
        run: |
          gh pr view --repo "${PR_TARGET_REPO}" "${PR_BRANCH}" \
            --json 'number' \
            --jq '"number=\(.number)"' \
            >> $GITHUB_OUTPUT

      - run: |
          echo "PR number: ${{ steps.pr.outputs.number }}"

  publish-screenshot:
    runs-on: ubuntu-latest
    needs: pr
    if: ${{ needs.pr.outputs.number }}

    steps:
    - name: Download artifacts
      uses: actions/github-script@v7
      with:
        script: |
          const runId = context.payload.workflow_run.id;
          
          const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
            owner: context.repo.owner,
            repo: context.repo.repo,
            run_id: runId
          });
          
          const screenshot = artifacts.data.artifacts.find(a => a.name === 'xvfb-screenshot');
          if (!screenshot) {
            console.log('No screenshot artifact found');
            return;
          }
          
          const download = await github.rest.actions.downloadArtifact({
            owner: context.repo.owner,
            repo: context.repo.repo,
            artifact_id: screenshot.id,
            archive_format: 'zip'
          });
          
          const fs = require('fs');
          fs.writeFileSync('screenshot.zip', Buffer.from(download.data));

    - name: Extract screenshot
      run: |
        unzip screenshot.zip
        ls -la

    - name: Checkout ci-artifacts repo
      uses: actions/checkout@v4
      with:
        repository: incognitojam/ci-artifacts
        token: ${{ secrets.ARTIFACTS_REPO_PAT }}
        path: ci-artifacts

    - name: Push screenshot
      working-directory: ci-artifacts
      run: |
        git checkout -b cube23/pr-${{ needs.pr.outputs.number }} || git checkout cube23/pr-${{ needs.pr.outputs.number }}
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        cp ../screenshot.png .
        git add .
        git commit -m "screenshot for PR #${{ needs.pr.outputs.number }}" || echo "No changes"
        git push origin cube23/pr-${{ needs.pr.outputs.number }}

    - name: Comment on PR with screenshot
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = ${{ needs.pr.outputs.number }};
          const screenshotUrl = `https://raw.githubusercontent.com/incognitojam/ci-artifacts/cube23/pr-${prNumber}/screenshot.png`;

          const body = `## ðŸ“¸ Screenshot from CI

          ![Screenshot](${screenshotUrl})

          _Screenshot captured from headless Vulkan rendering in CI_`;

          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
            body: body
          });
