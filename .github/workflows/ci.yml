name: CI

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: 1.3.275
        vulkan-components: Vulkan-Headers, Vulkan-Loader, Vulkan-ValidationLayers, SPIRV-Tools, Glslang
        vulkan-use-cache: true

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          ninja-build \
          libglfw3-dev \
          libgl1-mesa-dev \
          libglu1-mesa-dev \
          libxrandr-dev \
          libxinerama-dev \
          libxcursor-dev \
          libxi-dev

    - name: Verify Vulkan installation
      run: |
        echo "Vulkan SDK components:"
        which glslc || echo "glslc not found"
        which glslangValidator || echo "glslangValidator not found"
        which spirv-opt || echo "spirv-opt not found"
        echo "VULKAN_SDK: $VULKAN_SDK"

    - name: Configure CMake
      run: |
        cmake -B build \
          -G Ninja \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_C_COMPILER=gcc \
          -DCMAKE_CXX_COMPILER=g++

    - name: Build vox library
      run: cmake --build build --target vox -j$(nproc)

    - name: Build cube23
      run: cmake --build build --target cube23 -j$(nproc)

    - name: Build cube23_vk
      run: cmake --build build --target cube23_vk -j$(nproc)

    - name: Build all targets
      run: cmake --build build -j$(nproc)

    - name: List build artifacts
      run: |
        echo "Build directory contents:"
        ls -la build/
        echo "Checking for executables:"
        file build/cube23 || echo "cube23 not found"
        file build/cube23_vk || echo "cube23_vk not found"
        file build/libvox.a || echo "libvox.a not found"

    - name: Verify shader compilation
      run: |
        echo "Checking for compiled shaders:"
        ls -la build/shaders/ || echo "No shaders directory found"
